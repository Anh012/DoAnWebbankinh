@model DoAn2024_NguyenTuanAnh_202060621_Demo.Models.AutoAdd.tb_ProductCategory

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật danh mục sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">danh mục sản phẩm</a></li>
                    <li class="breadcrumb-item active">Cập nhật</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin Cập nhật</h3>
        </div>
        <div class="card-body">
            <div class="bs-stepper-content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        <label for="exampleInputEmail1">Người tạo</label>
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.DisplayFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Ngày tạo</label>
                        @Html.HiddenFor(model => model.CreatedDate)
                        @Html.DisplayFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Tiêu đề</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label for="exampleInputFile">Ảnh</label>
                        <div class="input-group">
                            <div class="custom-file">
                                @Html.TextBoxFor(x => x.Icon, new { @id = "txtImage", @class = "form-control" })
                            </div>
                            <div class="input-group-append">
                                <input type="button" value="Tải ảnh" onclick="BrowseServer('txtImage');" />
                            </div>
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label for="exampleInputEmail1">Alias</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="form-group">
                        <label for="exampleInputEmail1">Mô tả</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label for="exampleInputPassword1">Seo title</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">SeoDescription</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SeoDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SeoDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">SeoKeywords</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SeoKeywords, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SeoKeywords, "", new { @class = "text-danger" })
                        </div>
                    </div>*@





                    @*<div class="form-group">
            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Modifiedby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modifiedby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modifiedby, "", new { @class = "text-danger" })
            </div>
        </div>*@



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-primary">Xác nhận</button>
                            <a href="~/admin/ProductCategory" class="btn btn-light">Quay lại</a>
                        </div>
                    </div>
                </div>
                }

            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

@section  scripts{
    <script>
$(document).ready(function () {
              CKEDITOR.replace('txtDetail', {
                  customConfig: '/content/ckeditor/config.js',
                  extraAllowedContent: 'span',
              });
          });
          function BrowseServer(field) {
              var finder = new CKFinder();
              finder.selectActionFunction = function (fileUrl) {
                  document.getElementById(field).value = fileUrl;
              };
              finder.popup();
          }</script>
}